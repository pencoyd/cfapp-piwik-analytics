// Generated by CoffeeScript 1.4.0
/*
* This is Miniature Hipster
*  @name      Miniature Hipster
*  @author    Rob Friedman <px@ns1.net>
*  @url       <http://playerx.net>
*  @license   https://github.com/px/cfapp-piwik-analytics/raw/master/LICENSE.txt
*
*/

var loaded;

loaded = CloudFlare.define("piwik_analytics", ["piwik_analytics/config"], function(_config) {
  "use strict";

  var Piwik, activate, app_change, conserr, consl, loadScript, loadScript2, paqPush, piwik, piwik_version_default, setup, _debug, _delay;
  _delay = 0.11;
  _debug = true;
  piwik_version_default = "1.10.1";
  consl = function(m) {
    return console.log("px_> " + m);
  };
  conserr = function(m) {
    return console.error("px**> " + m);
  };
  loadScript = function(f) {
    if (_debug) {
      consl("loadScript '" + f + "'");
    }
    return CloudFlare.require([f], function() {
      return app_change();
    });
  };
  loadScript2 = function(f) {
    var scriptEl;
    if (_debug) {
      consl("loadScript2 '" + f + "'");
    }
    scriptEl = document.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.defer = true;
    scriptEl.async = true;
    scriptEl.src = f;
    scriptEl.onload = "";
    document.getElementsByTagName("head")[0].appendChild(scriptEl);
    return window._paq.push([
      function() {
        return window._visitor_id = this.getVisitorId();
      }
    ]);
  };
  app_change = function() {
    consl("app_change()");
    setTimeout(function() {
      return document.getElementById("app_change").innerHTML = "app_change -- getVisitorId=" + window._visitor_id;
    }, 1000 * _delay);
    try {
      if (window._visitor_id === void 0 || window._visitor_id === "") {
        return conserr(" no window._visitor_id piwik maybe failed to load!!! Oh Noe :( :( :(  ): ): ): ");
      } else {
        if (typeof window._visitor_id === "string" && window._visitor_id !== "") {
          return consl("piwik loaded... probably maybe. check for valid window._visitor_id='" + window._visitor_id + "', and tracker hit.");
        }
      }
    } catch (e) {
      return conserr("app_change() " + e);
    }
  };
  if (_debug) {
    consl("hello Piwik CloudFlare App");
  }
  Piwik = {};
  Piwik = function(config) {
    var index, _results;
    this.config = config;
    this.config.set_do_not_track = this.config.set_do_not_track.a || this.config.set_do_not_track.b || true;
    this.config.link_tracking = this.config.link_tracking.a || this.config.link_tracking.b || false;
    if (_debug) {
      consl("DEBUG CONFIG OUTPUT ENABLED -- options follow");
      consl("localStorage.clear()=" + localStorage.clear());
      try {
        consl("js_url=" + this.config.js_url);
      } catch (e) {
        conserr("_debug error in config " + e);
      }
      try {
        consl("set_do_not_track=" + this.config.set_do_not_track);
      } catch (e) {
        conserr("_debug error in config " + e);
      }
      try {
        consl("link_tracking=" + this.config.link_tracking);
      } catch (e) {
        conserr("_debug error in config " + e);
      }
      _results = [];
      for (index in this.config.site_id) {
        try {
          consl("SiteID." + index + "=" + this.config.site_id[index]);
        } catch (e) {
          conserr("_debug error in config " + e);
        }
        try {
          consl("TrackerURL." + index + "=" + this.config.tracker[index]);
        } catch (e) {
          conserr("_debug error in config " + e);
        }
        try {
          _results.push(consl("paq_push." + index + "=" + this.config.paq_push[index]));
        } catch (e) {
          _results.push(conserr("_debug error in config " + e));
        }
      }
      return _results;
    }
  };
  setup = function() {
    var index;
    if (_debug) {
      consl("Piwik.prototype.setup");
    }
    try {
      for (index in _config.site_id) {
        paqPush(index);
      }
      if (_config.use_cdnjs === true) {
        return loadScript2(_config.piwik_js_default);
      } else {
        return loadScript2(_config.js_url);
      }
    } catch (e) {
      return conserr("prototype.setup error " + e);
    }
  };
  activate = function() {
    var index, runSetup;
    if (_debug) {
      consl("Piwik.prototype.activate");
    }
    runSetup = false;
    try {
      for (index in _config.site_id) {
        if (typeof _config.tracker[index] !== "string" || _config.tracker[index] === "") {
          conserr("Invalid tracker " + _config.tracker[index]);
        } else if (typeof _config.site_id[index] !== "string" || _config.site_id[index] === "") {
          conserr("Invalid site_id " + _config.site_id[index]);
        } else if (typeof _config.paq_push[index] !== "string" || _config.paq_push[index] === "") {
          conserr("site id \"" + index + "\" has Invalid paq_push \"" + _config.paq_push[index] + "\"");
          config.paq_push[index] = "";
        } else {
          runSetup = true;
        }
      }
    } catch (e) {
      conserr("errors -- condition met " + e);
    }
    if (runSetup) {
      return setup();
    } else {
      return conserr("prototype.activate else condition met");
    }
  };
  Piwik.prototype.noScript = function() {
    var cursor, script, test_site;
    if (_debug) {
      consl("noScript");
    }
    test_site = piwik.config.tracker || "//pikwik-ssl.ns1.net/piwik.php";
    test_site += "?id=" + piwik.config.site_id + "&amp;rec=1";
    if (_debug) {
      consl("noScript| test_site=" + test_site);
    }
    script = document.createElement("noscript");
    cursor = document.getElementsByTagName("script", true)[0];
    return cursor.parentNode.insertBefore(script, cursor);
  };
  paqPush = function(index) {
    var prog, scriptEl;
    if (_debug) {
      consl("paqPush");
    }
    try {
      prog = "window._paq = window._paq || []; ";
      prog += "window._paq.push(['setSiteId', " + _config.site_id[index] + "]);";
      prog += "window._paq.push(['setTrackerUrl', '" + _config.tracker[index] + "']);";
      if (_config.link_tracking[index] === "true") {
        prog += "window._paq.push(['enableLinkTracking',true]);";
      } else {
        prog += "window._paq.push(['enableLinkTracking',false]);";
      }
      if (_config.set_do_not_track[index] === "true") {
        prog += "window._paq.push(['setDoNotTrack',true]);";
      } else {
        prog += "window._paq.push(['setDoNotTrack',false]);";
      }
      prog += "window._paq.push(" + _config.paq_push[index] + ");";
      prog += "window._paq.push(['trackPageView']);";
      if (_debug) {
        consl(prog);
      }
      scriptEl = document.createElement("script");
      scriptEl.type = "text/javascript";
      scriptEl.innerHTML = prog;
      return document.getElementsByTagName("head")[0].appendChild(scriptEl);
    } catch (e) {
      return conserr("paqPush(index) error" + e);
    }
  };
  piwik = new Piwik(_config);
  activate();
  consl("stuff");
  app_change();
  return true;
});

loaded.then(function() {
  return modules;
}, function() {
  return error({});
});
