// Generated by CoffeeScript 1.4.0
/*
* This is Miniature Hipster
*  @name      Miniature Hipster
*  @version   0.0.22b
*  @author    Rob Friedman <px@ns1.net>
*  @url       <http://playerx.net>
*  @license   https://github.com/px/cfapp-piwik-analytics/raw/master/LICENSE.txt
*  @todo      TODO: look for the lines in the coffeescript source file
*
* vim: set tabstop=2:softtabstop=2:shiftwidth=2:noexpandtab
*/

/*
# CloudFlare.push( { paths: {'piwik_analytics': 'http://labs.variablesoftware.com/test/miniature-hipster/public/javascripts/' } } );
*/

/*
# CloudFlare.push( { verbose:1 } );
*/

/*
# piwik_analytics module definition
# stick with commas for sep
# REQUIRE:
#  piwik.js library
#  piwik_analytics/config
#   -- defaults to {} and will assign test defaults
#  cloudflare/console for output to console
*/

CloudFlare.define('piwik_analytics', ['//cdnjs.cloudflare.com/ajax/libs/piwik/1.10.1/piwik.js', 'piwik_analytics/config', 'cloudflare/console'], function(__piwik_js, __config, __console) {
  var default_debug, default_piwik_site_id, default_piwik_tracker, myPiwik, _isPiwik, _linkTracking, _visitorId;
  if (__config == null) {
    __config = {};
  }
  "use strict";

  window._paq = window._paq || [];
  myPiwik = {};
  _isPiwik = false;
  _visitorId = false;
  _linkTracking = true;
  default_debug = true || null;
  default_piwik_tracker = "/piwik/piwik.php";
  default_piwik_site_id = "1";
  try {
    if (__config._debug === void 0) {
      __config._debug = default_debug;
      __console.log("Using test default _debug=" + default_debug);
    }
  } catch (e) {
    __config._debug = default_debug;
    __console.error(e);
  }
  try {
    if (__config.piwik_tracker === void 0) {
      __config.piwik_tracker = default_piwik_tracker;
      __console.log("Using test default TrackerUrl=" + default_piwik_tracker);
    }
  } catch (e) {
    __config.piwik_tracker = default_piwik_tracker;
    __console.error(e);
  }
  try {
    if (__config.site_id === void 0) {
      __config.site_id = default_piwik_site_id;
      __console.log("Using test default SiteId=" + default_piwik_site_id);
    }
  } catch (e) {
    __config.site_id = default_piwik_site_id;
    __console.error(e);
  }
  if (__config._debug != null) {
    CloudFlare.push({
      verbose: 1
    });
    __console.log("Hello from the Piwik Analytics CloudFlare App!");
    __console.log("localStorage.clear() === undefined? " + (window.localStorage.clear() != null));
  }
  myPiwik.isPiwik = function() {
    window._paq.push([
      function() {
        return _isPiwik = true;
      }
    ]);
    return _isPiwik;
  };
  myPiwik.getVisitorId = function() {
    window._paq.push([
      function() {
        _visitorId = this.getVisitorId();
        if (__config._debug != null) {
          __console.log("_visitorId=" + _visitorId);
        }
        return _visitorId;
      }
    ]);
    return _visitorId;
  };
  myPiwik.setSiteId = function(_SiteId, _defaultSiteId) {
    if (_SiteId == null) {
      _SiteId = default_piwik_site_id;
    }
    if (_defaultSiteId == null) {
      _defaultSiteId = default_piwik_site_id;
    }
    if (__config._debug != null) {
      __console.log("myPiwik.setSiteId");
    }
    if (!isNaN(_SiteId)) {
      if (__config._debug != null) {
        __console.log("Using _SiteId=" + _SiteId);
      }
    } else {
      if (__config._debug != null) {
        __console.error("Invalid SiteId=" + _SiteId + " ; defaulting to " + _defaultSiteId);
      }
      _SiteId = _defaultSideId;
    }
    window._paq.push(['setSiteId', unescape(_SiteId)]);
    if (__config._debug != null) {
      __console.log("end myPiwik.setSiteId");
    }
    return _SiteId;
  };
  myPiwik.setTracker = function(_tracker) {
    if (_tracker == null) {
      _tracker = default_piwik_tracker;
    }
    if (__config._debug != null) {
      __console.log("myPiwik.setTracker=" + _tracker);
    }
    window._paq.push(['setTrackerUrl', unescape(_tracker)]);
    if (__config._debug != null) {
      __console.log("end myPiwik.setTracker");
    }
    /*
          #return _tracker
    */

    return _tracker;
  };
  myPiwik.menuOpts = function() {
    if (__config._debug != null) {
      __console.log("myPiwik.menuOpts");
    }
    if (__config.link_tracking === "true" || __config.link_tracking === void 0) {
      window._paq.push(['enableLinkTracking', true]);
    } else {
      window._paq.push(['enableLinkTracking', false]);
    }
    if (__config.set_obey_do_not_track === "true" || __config.set_obey_do_not_track === void 0) {
      window._paq.push(['setDoNotTrack', true]);
    } else {
      window._paq.push(['setDoNotTrack', false]);
    }
    if (__config._debug != null) {
      __console.log("end myPiwik.menuOpts");
    }
    return true;
  };
  myPiwik.paqPush = function() {
    if (__config._debug != null) {
      __console.log("myPiwik.paqPush()");
    }
    window._paq = window._paq || [];
    myPiwik.setSiteId(__config.site_id, __config.default_site_id);
    myPiwik.setTracker(__config.piwik_tracker);
    myPiwik.menuOpts();
    if ((!__config.paq_push) && (__config.paq_push !== void 0) && (__config.paq_push !== "")) {
      window._paq.push(__config.paq_push);
    }
    window._paq.push(['trackPageView']);
    if (__config._debug != null) {
      __console.log("paqPush() finished ok! _paq=" + window._paq);
    }
    return window._paq;
  };
  myPiwik.getVisitorId();
  myPiwik.paqPush();
  return myPiwik;
});

/*
#end myPiwik module
*/

